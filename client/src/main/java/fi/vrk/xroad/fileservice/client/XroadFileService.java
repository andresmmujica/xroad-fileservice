/**
 * MIT License
 *
 * Copyright (c) 2017 Population Register Centre
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fi.vrk.xroad.fileservice.client;

import fi.vrk.xroad.fileservice.ErrorResponse;

import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import java.util.List;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-11-29T16:52:34.477+02:00
 * Generated source version: 3.1.4
 */
@WebService(targetNamespace = "http://vrk.fi/xroad/fileservice", name = "XroadFileService")
@XmlSeeAlso({eu.x_road.xsd.identifiers.ObjectFactory.class})
public interface XroadFileService {

    @WebMethod
    @RequestWrapper(localName = "get", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.GetRequestType")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.GetResponseType")
    @WebResult(name = "object", targetNamespace = "http://vrk.fi/xroad/fileservice")
    DataHandler get(
            @WebParam(name = "name", targetNamespace = "http://vrk.fi/xroad/fileservice") String name,
            @WebParam(mode = WebParam.Mode.INOUT, name = "client",
                    targetNamespace = "http://x-road.eu/xsd/xroad" + ".xsd", header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadClientIdentifierType> client,
            @WebParam(mode = WebParam.Mode.INOUT, name = "service",
                    targetNamespace = "http://x-road.eu/xsd/xroad" + ".xsd", header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadServiceIdentifierType> service,
            @WebParam(mode = WebParam.Mode.INOUT, name = "userId",
                    targetNamespace = "http://x-road.eu/xsd/xroad" + ".xsd", header = true)
                    javax.xml.ws.Holder<String> userId,
            @WebParam(mode = WebParam.Mode.INOUT, name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true) javax.xml.ws.Holder<String> id,
            @WebParam(mode = WebParam.Mode.INOUT, name = "protocolVersion",
                    targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true)
                    javax.xml.ws.Holder<String> protocolVersion) throws ErrorResponse;

    @WebMethod
    @RequestWrapper(localName = "put", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.PutRequestType")
    @ResponseWrapper(localName = "putResponse", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.PutResponseType")
    @WebResult(name = "success", targetNamespace = "http://vrk.fi/xroad/fileservice")
    boolean put(
            @WebParam(name = "name", targetNamespace = "http://vrk.fi/xroad/fileservice")
                    java.lang.String name,
            @WebParam(name = "object", targetNamespace = "http://vrk.fi/xroad/fileservice")
                    javax.activation.DataHandler object,
            @WebParam(mode = WebParam.Mode.INOUT, name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadClientIdentifierType> client,
            @WebParam(mode = WebParam.Mode.INOUT, name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadServiceIdentifierType> service,
            @WebParam(mode = WebParam.Mode.INOUT, name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<java.lang.String> userId,
            @WebParam(mode = WebParam.Mode.INOUT, name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<java.lang.String> id,
            @WebParam(mode = WebParam.Mode.INOUT, name = "protocolVersion",
                    targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true)
                    javax.xml.ws.Holder<java.lang.String> protocolVersion
    ) throws ErrorResponse;

    @WebMethod
    @RequestWrapper(localName = "list", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.List")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://vrk.fi/xroad/fileservice",
            className = "fi.vrk.xroad.fileservice.ListResponseType")
    @WebResult(name = "name", targetNamespace = "http://vrk.fi/xroad/fileservice")
    List<String> list(
            @WebParam(mode = WebParam.Mode.INOUT, name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadClientIdentifierType> client,
            @WebParam(mode = WebParam.Mode.INOUT, name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<eu.x_road.xsd.identifiers.XRoadServiceIdentifierType> service,
            @WebParam(mode = WebParam.Mode.INOUT, name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<java.lang.String> userId,
            @WebParam(mode = WebParam.Mode.INOUT, name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd",
                    header = true)
                    javax.xml.ws.Holder<java.lang.String> id,
            @WebParam(mode = WebParam.Mode.INOUT, name = "protocolVersion",
                    targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true)
                    javax.xml.ws.Holder<java.lang.String> protocolVersion
    ) throws ErrorResponse;

}
