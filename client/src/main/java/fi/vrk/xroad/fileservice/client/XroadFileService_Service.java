/**
 * MIT License
 *
 * Copyright (c) 2017 Population Register Centre
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fi.vrk.xroad.fileservice.client;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-11-29T16:52:34.482+02:00
 * Generated source version: 3.1.4
 *
 */
@WebServiceClient(name = "XroadFileService", targetNamespace = "http://vrk.fi/xroad/fileservice")
public class XroadFileService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://vrk.fi/xroad/fileservice", "XroadFileService");
    public final static QName XroadFileServicePort = new QName("http://vrk.fi/xroad/fileservice", "XroadFileServicePort");
    static {
        WSDL_LOCATION = XroadFileService_Service.class.getResource("/fileservice.wsdl");
    }

    public XroadFileService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XroadFileService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XroadFileService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public XroadFileService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public XroadFileService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public XroadFileService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     *
     * @return
     *     returns XroadFileService
     */
    @WebEndpoint(name = "XroadFileServicePort")
    public XroadFileService getXroadFileServicePort() {
        return super.getPort(XroadFileServicePort, XroadFileService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XroadFileService
     */
    @WebEndpoint(name = "XroadFileServicePort")
    public XroadFileService getXroadFileServicePort(WebServiceFeature... features) {
        return super.getPort(XroadFileServicePort, XroadFileService.class, features);
    }

}
